#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
    };

    macros {
        new_macromenu: new_macromenu {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(F10) &kp W>;
            label = "NEW_MACROMENU";
        };

        new_macroblue: new_macroblue {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F &kp NUMBER_5>;
            label = "NEW_MACROBLUE";
        };

        new_macrored: new_macrored {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F &kp NUMBER_2>;
            label = "NEW_MACRORED";
        };

        new_macronomal: new_macronomal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F &kp NUMBER_0>;
            label = "NEW_MACRONOMAL";
        };

        new_macrogomdelete: new_macrogomdelete {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(DELETE) &kp Y>;
            label = "NEW_MACROGOMDELETE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp CAPSLOCK  &kp N1        &kp N2     &kp N3  &kp N4  &kp N5       &kp UP_ARROW     &kp N6     &kp N7         &kp N8      &kp N9     &kp N0      &kp BACKSPACE
&kp TAB       &kp Q         &kp W      &kp E   &kp R   &kp T        &kp DOWN_ARROW   &kp Y      &kp U          &kp I       &kp O      &kp P       &kp LEFT_BRACKET
&kp LSHIFT    &kp A         &kp S      &kp D   &kp F   &kp G        &kp LEFT_ARROW   &kp H      &kp J          &kp K       &kp L      &kp MINUS   &kp SEMICOLON
&kp LCTRL     &kp Z         &kp X      &kp C   &kp V   &kp B        &kp RIGHT_ARROW  &kp N      &kp M          &kp COMMA   &kp DOT    &kp FSLH    &kp ENTER
&kp C_MUTE    &kp LEFT_WIN  &kp SPACE  &mo 2   &mo 1   &kp ENTER    &kp ENTER        &kp ENTER  &kp BACKSPACE  &kp DELETE  &kp SPACE  &kp ESCAPE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp LC(W)        &kp LC(PAGE_UP)  &kp LC(PAGE_DOWN)  &kp LA(LEFT_ARROW)  &kp LA(RIGHT_ARROW)  &kp LC(LS(T))    &kp UP_ARROW     &kp LS(NUMBER_8)  &kp LS(NUMBER_9)  &kp LS(RIGHT_BRACKET)  &kp LS(BACKSLASH)  &kp COLON     &kp LS(MINUS)
&trans           &kp LC(Y)        &kp F2             &kp BACKSPACE       &kp DELETE           &kp LC(A)        &kp DOWN_ARROW   &kp NUMBER_5      &kp NUMBER_6      &kp NUMBER_7           &kp NUMBER_8       &kp NUMBER_9  &kp LS(SINGLE_QUOTE)
&kp F5           &kp LC(Z)        &kp LC(LS(N))      &kp LC(C)           &kp LC(V)            &kp SPACE        &kp LEFT_ARROW   &kp NUMBER_0      &kp NUMBER_1      &kp NUMBER_2           &kp NUMBER_3       &kp NUMBER_4  &kp SINGLE_QUOTE
&new_macronomal  &kp A            &new_macromenu     &kp X               &new_macroblue       &new_macrored    &kp RIGHT_ARROW  &kp HASH          &kp PERCENT       &kp LS(NUMBER_6)       &kp EXCLAMATION    &kp QUESTION  &kp EQUAL
&trans           &trans           &trans             &to 3               &trans               &to 4            &kp ENTER        &trans            &trans            &trans                 &trans             &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&kp UP_ARROW     &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0    &kp UP_ARROW     &trans   &trans  &trans  &trans  &kp LG(PRINTSCREEN)  &kp HOME
&kp DOWN_ARROW   &kp Y         &kp U         &kp I         &kp O         &kp P           &kp DOWN_ARROW   &kp F5   &kp F6  &kp F7  &kp F8  &kp F9               &kp F12
&kp LEFT_ARROW   &kp H         &kp J         &kp K         &kp L         &kp MINUS       &kp LEFT_ARROW   &kp F10  &kp F1  &kp F2  &kp F3  &kp F4               &kp F11
&kp RIGHT_ARROW  &kp N         &kp M         &kp COMMA     &kp PERIOD    &kp SLASH       &kp RIGHT_ARROW  &trans   &trans  &trans  &trans  &trans               &kp END
&trans           &trans        &trans        &trans        &to 3         &to 4           &kp ENTER        &trans   &trans  &trans  &trans  &kp LC(LA(DELETE))
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&kp ESCAPE        &kp NUMBER_1  &kp NUMBER_2    &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &trans  &trans              &trans               &trans               &trans               &trans  &trans
&kp TAB           &kp Q         &kp W           &kp E         &kp R         &kp T           &trans  &kp NUMBER_6        &new_macrogomdelete  &kp DELETE           &trans               &trans  &trans
&kp LEFT_SHIFT    &kp A         &kp S           &kp D         &kp F         &kp G           &trans  &kp PAGE_UP         &kp LEFT_ARROW       &kp RIGHT_ARROW      &kp PAGE_DOWN        &trans  &trans
&kp LEFT_CONTROL  &kp Z         &kp X           &kp C         &kp V         &kp B           &trans  &kp LS(LEFT_ARROW)  &kp LC(LEFT_ARROW)   &kp LC(RIGHT_ARROW)  &kp LS(RIGHT_ARROW)  &trans  &trans
&to 0             &kp UP_ARROW  &kp DOWN_ARROW  &kp SPACE     &kp LEFT_ALT  &kp ENTER       &trans  &kp ENTER           &kp SPACE            &kp LA(F4)           &kp X                &kp C
            >;
        };

        layer_4 {
            bindings = <
&sys_reset   &trans          &trans  &trans  &trans  &soft_off    &trans        &trans           &trans           &trans           &trans           &trans           &trans
&trans       &trans          &trans  &trans  &trans  &trans       &trans        &trans           &bl BL_DEC       &bl BL_TOG       &bl BL_INC       &trans           &trans
&trans       &trans          &trans  &trans  &trans  &trans       &out OUT_USB  &rgb_ug RGB_EFR  &rgb_ug RGB_BRD  &rgb_ug RGB_TOG  &rgb_ug RGB_BRI  &rgb_ug RGB_EFF  &trans
&bootloader  &trans          &trans  &trans  &trans  &trans       &out OUT_BLE  &rgb_ug RGB_SAD  &rgb_ug RGB_SPD  &trans           &rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &trans
&to 0        &studio_unlock  &trans  &trans  &trans  &trans       &trans        &trans           &trans           &trans           &trans           &trans
            >;
        };
    };
};
